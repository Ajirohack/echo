apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo-nginx
  namespace: echo
  labels:
    app: echo-nginx
    component: proxy
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: echo-nginx
  template:
    metadata:
      labels:
        app: echo-nginx
        component: proxy
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9113'
        prometheus.io/path: '/metrics'
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 101
        fsGroup: 101
      containers:
        - name: nginx
          image: nginx:1.25-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          env:
            - name: NGINX_ENTRYPOINT_QUIET_LOGS
              value: '1'
          resources:
            requests:
              memory: '128Mi'
              cpu: '100m'
            limits:
              memory: '256Mi'
              cpu: '500m'
          livenessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
            - name: nginx-default-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
              readOnly: true
            - name: nginx-cache
              mountPath: /var/cache/nginx
            - name: nginx-run
              mountPath: /var/run
            - name: nginx-logs
              mountPath: /var/log/nginx
            - name: static-files
              mountPath: /usr/share/nginx/html
              readOnly: true
        - name: nginx-exporter
          image: nginx/nginx-prometheus-exporter:0.11.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: metrics
              containerPort: 9113
              protocol: TCP
          args:
            - -nginx.scrape-uri=http://localhost:80/nginx_status
            - -web.listen-address=:9113
            - -web.telemetry-path=/metrics
          resources:
            requests:
              memory: '32Mi'
              cpu: '25m'
            limits:
              memory: '64Mi'
              cpu: '50m'
      volumes:
        - name: nginx-config
          configMap:
            name: echo-nginx-config
        - name: nginx-default-config
          configMap:
            name: echo-nginx-default-config
        - name: nginx-cache
          emptyDir: {}
        - name: nginx-run
          emptyDir: {}
        - name: nginx-logs
          emptyDir: {}
        - name: static-files
          configMap:
            name: echo-static-files
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - echo-nginx
                topologyKey: kubernetes.io/hostname
      nodeSelector:
        echo.io/node-type: 'proxy'
      tolerations:
        - key: 'echo.io/dedicated'
          operator: 'Equal'
          value: 'proxy'
          effect: 'NoSchedule'
---
apiVersion: v1
kind: Service
metadata:
  name: echo-nginx-service
  namespace: echo
  labels:
    app: echo-nginx
    component: proxy
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '9113'
    prometheus.io/path: '/metrics'
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
    - name: https
      port: 443
      targetPort: https
      protocol: TCP
    - name: metrics
      port: 9113
      targetPort: metrics
      protocol: TCP
  selector:
    app: echo-nginx
  loadBalancerSourceRanges:
    - 0.0.0.0/0
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: echo-nginx-config
  namespace: echo
  labels:
    app: echo-nginx
    component: proxy
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log notice;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        # Logging format
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        'rt=$request_time uct="$upstream_connect_time" '
                        'uht="$upstream_header_time" urt="$upstream_response_time"';
        
        access_log /var/log/nginx/access.log main;
        
        # Performance settings
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        server_tokens off;
        
        # Buffer settings
        client_body_buffer_size 128k;
        client_max_body_size 100m;
        client_header_buffer_size 1k;
        large_client_header_buffers 4 4k;
        output_buffers 1 32k;
        postpone_output 1460;
        
        # Timeout settings
        client_body_timeout 12;
        client_header_timeout 12;
        send_timeout 10;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1000;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=websocket:10m rate=5r/s;
        limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
        
        # Connection limiting
        limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
        limit_conn conn_limit_per_ip 20;
        
        # Upstream definitions
        upstream echo_app {
            least_conn;
            server echo-app-service:3000 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }
        
        upstream echo_websocket {
            ip_hash;
            server echo-app-service:3001 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }
        
        # Include server configurations
        include /etc/nginx/conf.d/*.conf;
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: echo-nginx-default-config
  namespace: echo
  labels:
    app: echo-nginx
    component: proxy
data:
  default.conf: |
    server {
        listen 80;
        server_name _;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Nginx status for monitoring
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
        
        # WebSocket connections
        location /ws {
            limit_req zone=websocket burst=10 nodelay;
            
            proxy_pass http://echo_websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific timeouts
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
            
            # Buffer settings for WebSocket
            proxy_buffering off;
            proxy_cache off;
        }
        
        # API endpoints
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://echo_app;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }
        
        # File upload endpoint
        location /api/upload {
            limit_req zone=upload burst=5 nodelay;
            
            client_max_body_size 100m;
            client_body_timeout 300s;
            
            proxy_pass http://echo_app;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Extended timeouts for uploads
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Disable buffering for large uploads
            proxy_buffering off;
            proxy_request_buffering off;
        }
        
        # Static files
        location /static/ {
            alias /usr/share/nginx/html/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
            
            # Gzip static files
            gzip_static on;
            
            # Security for static files
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
        
        # Root location - serve static files or proxy to app
        location / {
            try_files $uri $uri/ @app;
        }
        
        # Fallback to application
        location @app {
            proxy_pass http://echo_app;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }

    # HTTPS server configuration (commented out - enable when SSL certificates are available)
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com;
    #     
    #     ssl_certificate /etc/ssl/certs/echo.crt;
    #     ssl_certificate_key /etc/ssl/private/echo.key;
    #     
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     ssl_session_cache shared:SSL:1m;
    #     ssl_session_timeout 5m;
    #     
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    #     
    #     # Include the same location blocks as HTTP server
    #     include /etc/nginx/conf.d/locations.conf;
    # }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: echo-static-files
  namespace: echo
  labels:
    app: echo-nginx
    component: proxy
data:
  404.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>404 - Page Not Found | Echo</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                margin: 0;
                padding: 0;
                display: flex;
                justify-content: center;
                align-items: center;
                min-height: 100vh;
                color: white;
            }
            .container {
                text-align: center;
                padding: 2rem;
            }
            h1 {
                font-size: 6rem;
                margin: 0;
                opacity: 0.8;
            }
            h2 {
                font-size: 2rem;
                margin: 1rem 0;
                font-weight: 300;
            }
            p {
                font-size: 1.1rem;
                margin: 1rem 0;
                opacity: 0.9;
            }
            .btn {
                display: inline-block;
                padding: 12px 24px;
                background: rgba(255, 255, 255, 0.2);
                color: white;
                text-decoration: none;
                border-radius: 6px;
                margin-top: 2rem;
                transition: background 0.3s ease;
            }
            .btn:hover {
                background: rgba(255, 255, 255, 0.3);
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>404</h1>
            <h2>Page Not Found</h2>
            <p>The page you're looking for doesn't exist or has been moved.</p>
            <a href="/" class="btn">Go Home</a>
        </div>
    </body>
    </html>
  50x.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Server Error | Echo</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
                margin: 0;
                padding: 0;
                display: flex;
                justify-content: center;
                align-items: center;
                min-height: 100vh;
                color: white;
            }
            .container {
                text-align: center;
                padding: 2rem;
            }
            h1 {
                font-size: 4rem;
                margin: 0;
                opacity: 0.8;
            }
            h2 {
                font-size: 2rem;
                margin: 1rem 0;
                font-weight: 300;
            }
            p {
                font-size: 1.1rem;
                margin: 1rem 0;
                opacity: 0.9;
            }
            .btn {
                display: inline-block;
                padding: 12px 24px;
                background: rgba(255, 255, 255, 0.2);
                color: white;
                text-decoration: none;
                border-radius: 6px;
                margin-top: 2rem;
                transition: background 0.3s ease;
            }
            .btn:hover {
                background: rgba(255, 255, 255, 0.3);
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>5xx</h1>
            <h2>Server Error</h2>
            <p>We're experiencing some technical difficulties. Please try again later.</p>
            <a href="/" class="btn">Go Home</a>
        </div>
    </body>
    </html>
